services:
  web:
    build:
      context: .                # Build the Docker image from the current directory
      dockerfile: Dockerfile    # Use this Dockerfile
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"             # Map port 8000 of host to port 8000 of container (Django default)
    volumes:
      - .:/peptide_project                  # Mount current directory into /app in container (for live code updates)
    environment:
      - POSTGRES_HOST=${DOCKER_POSTGRES_HOST}   # Override .env value, DB hostname inside Docker network
      - POSTGRES_PORT=${DOCKER_POSTGRES_PORT}   # Override .env value, DB port inside Docker network
      - DJANGO_SETTINGS_MODULE                  # Django settings module to use (set in .env or elsewhere)
    depends_on:
      db:
        condition: service_healthy               # Wait for DB service to be healthy before starting
      redis:
        condition: service_started               # Wait for Redis service to start (default behavior)

  db:
    image: postgres:16                            # Use official Postgres image, version 16
    env_file:
      - .env                                     # Load environment variables from .env file
    environment:
      - POSTGRES_DB=${POSTGRES_DB}               # Database name (from .env)
      - POSTGRES_USER=${POSTGRES_SUPERUSER}      # DB superuser name (from .env)
      - POSTGRES_PASSWORD=${POSTGRES_SUPERUSER_PASS} # DB superuser password (from .env)
    ports:
      - ${DOCKER_POSTGRES_EXTERNAL_PORT}:${DOCKER_POSTGRES_PORT} # Map host port to container port for DB access
    volumes:
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh  # Init script for DB setup
      - pgdata:/var/lib/postgresql/data                      # Persist DB data in a Docker volume
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "psql -U ${POSTGRES_RESTRICTED_USER} -d ${POSTGRES_DB} -c '\\q'"
        ]                                         # Check DB connection for health status
      interval: 10s                               # How often to run healthcheck
      timeout: 5s                                # Timeout for each healthcheck
      retries: 5                                 # Number of retries before marking unhealthy
      start_period: 5s                           # Initial wait time before starting healthchecks

  redis:
    image: redis:7                               # Use official Redis image, version 7
    ports:
      - "6379:6379"                             # Map Redis default port

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=${DOCKER_POSTGRES_HOST}   # Override .env value, DB hostname inside Docker network
      - POSTGRES_PORT=${DOCKER_POSTGRES_PORT}   # Override .env value, DB port inside Docker network
      - DJANGO_SETTINGS_MODULE                  # Django settings module to use (set in .env or elsewhere)
    command: celery -A peptide_project worker -l info
    volumes:
      - .:/peptide_project
    depends_on:
      - redis
      - db
volumes:
  pgdata:                                        # Named volume for persistent Postgres data
